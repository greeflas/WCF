//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Client.ServiceReference1 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IContractService")]
    public interface IContractService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContractService/Method", ReplyAction="http://tempuri.org/IContractService/MethodResponse")]
        double Method(string str);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContractService/Method", ReplyAction="http://tempuri.org/IContractService/MethodResponse")]
        System.Threading.Tasks.Task<double> MethodAsync(string str);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IContractServiceChannel : Client.ServiceReference1.IContractService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ContractServiceClient : System.ServiceModel.ClientBase<Client.ServiceReference1.IContractService>, Client.ServiceReference1.IContractService {
        
        public ContractServiceClient() {
        }
        
        public ContractServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ContractServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ContractServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ContractServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public double Method(string str) {
            return base.Channel.Method(str);
        }
        
        public System.Threading.Tasks.Task<double> MethodAsync(string str) {
            return base.Channel.MethodAsync(str);
        }
    }
}
